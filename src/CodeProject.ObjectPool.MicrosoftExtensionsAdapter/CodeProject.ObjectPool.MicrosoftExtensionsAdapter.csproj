<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AssemblyName>CodeProject.ObjectPool.MicrosoftExtensionsAdapter</AssemblyName>
    <AssemblyTitle>Generic and concurrent Object Pool - Adapter for Microsoft Extensions</AssemblyTitle>
    <TargetFrameworks>netstandard2.0;net461</TargetFrameworks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AssemblyOriginatorKeyFile>../../pomma89.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
  </PropertyGroup>

  <PropertyGroup Label="NuGet">
    <PackageId>CodeProject.ObjectPool.MicrosoftExtensionsAdapter</PackageId>
    <Title>Generic and concurrent Object Pool - Adapter for Microsoft Extensions</Title>
    <Summary>A generic, concurrent, portable and flexible Object Pool for the .NET Framework.</Summary>
    <Description>$(Summary) It is completely based on the Code Project article of Ofir Makmal (http://goo.gl/4qig6T). Library is production ready and it is successfully working in real life systems. Original source code has been modified, in order to introduce a Parameterized Object Pool, already drafted by Ofir Makmal in the comments of the article. Moreover, a few unit tests have been added, in order to improve code reliability, and a lot of other small changes have also been applied. Of course, all modified source code is freely available at the project URL of this package. Many thanks to Ofir Makmal for his great work.</Description>
    <PackageTags>codeproject;object;pool;microsoft;extensions;adapter</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\CodeProject.ObjectPool\CodeProject.ObjectPool.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="HellBrick.Diagnostics" Version="2.0.0">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.ObjectPool" Version="2.0.0" />
  </ItemGroup>
</Project>